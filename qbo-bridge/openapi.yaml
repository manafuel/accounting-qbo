# OpenAPI spec for qbo-bridge
openapi: 3.0.3
info:
  title: qbo-bridge
  version: 0.3.3
  description: Minimal bridge to QuickBooks Online for GPT Actions
servers:
  - url: https://accounting-qbo.onrender.com
components:
  securitySchemes:
    actionApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
  schemas:
    QboResponse:
      type: object
      additionalProperties: true
    ConnectionStatus:
      type: object
      properties:
        connected:
          type: boolean
        realmId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        expires:
          type: integer
          nullable: true
          description: Epoch seconds
        expiresInSec:
          type: integer
          nullable: true
      required:
        - connected
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        hint:
          type: string
          nullable: true
        suggestions:
          type: object
          additionalProperties: true
          nullable: true
        qboFault:
          type: object
          nullable: true
          properties:
            type:
              type: string
            errors:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  detail:
                    type: string
                  element:
                    type: string
security:
  - actionApiKey: []
  - bearerAuth: []
paths:
  /qbo/query:
    get:
      summary: Run a QuickBooks query
      operationId: qboQuery
      parameters:
        - in: query
          name: realmId
          required: false
          schema:
            type: string
          description: Optional; defaults to the connected company.
        - in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        '200':
          description: QBO query response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
        '400':
          description: Validation or request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                vendorNameField:
                  summary: Vendor uses DisplayName instead of Name
                  value:
                    error: HTTP 400 Bad Request
                    qboFault:
                      type: ValidationFault
                      errors:
                        - code: "4001"
                          message: Invalid query
                          detail: "QueryValidationError: Property Name not found for Entity Vendor"
                    suggestions:
                      queryRewrite: "SELECT Id, DisplayName FROM Vendor STARTPOSITION 1 MAXRESULTS 5"
                      reason: Vendor uses DisplayName instead of Name

  /qbo/purchase:
    post:
      summary: Create a Purchase transaction
      operationId: createPurchase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                realmId:
                  type: string
                  description: Optional; defaults to the connected company.
                paymentType:
                  type: string
                  enum: [Cash, CreditCard]
                accountRef:
                  type: object
                  properties:
                    value:
                      type: string
                  required:
                    - value
                vendorRef:
                  type: object
                  properties:
                    value:
                      type: string
                  required:
                    - value
                  description: Provide either vendorRef or vendorName.
                vendorName:
                  type: string
                  description: If set (and vendorRef omitted), the API upserts the vendor by DisplayName before creating the Purchase.
                txnDate:
                  type: string
                  pattern: '^\d{4}-\d{2}-\d{2}$'
                privateNote:
                  type: string
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      amount:
                        type: number
                      description:
                        type: string
                      expenseAccountRef:
                        type: object
                        properties:
                          value:
                            type: string
                        required:
                          - value
                      expenseAccountName:
                        type: string
                        description: If provided (and expenseAccountRef omitted), the API upserts an Expense account (detail Supplies) and uses it.
                      customerRef:
                        type: object
                        properties:
                          value:
                            type: string
                      classRef:
                        type: object
                        properties:
                          value:
                            type: string
                      taxCodeRef:
                        type: object
                        properties:
                          value:
                            type: string
                      billableStatus:
                        type: string
                        enum: [NotBillable, Billable]
                  minItems: 1
              required:
                - paymentType
                - accountRef
                - txnDate
                - lines
      responses:
        '200':
          description: QBO create purchase response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
        '400':
          description: Validation or request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Missing or invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /qbo/attachment:
    post:
      summary: Upload an attachment and link to a Purchase
      operationId: uploadAttachment
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                realmId:
                  type: string
                  description: Optional; defaults to the connected company.
                txnId:
                  type: string
                note:
                  type: string
                file:
                  type: string
                  format: binary
              required:
                - txnId
                - file
      responses:
        '200':
          description: QBO upload response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
        '400':
          description: Validation or request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Missing or invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /lookups/vendors:
    get:
      summary: List vendors (optionally filtered by name)
      operationId: listVendors
      parameters:
        - in: query
          name: realmId
          required: false
          schema:
            type: string
          description: Optional; defaults to the connected company.
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: Optional filter; matches anywhere in DisplayName.
        - in: query
          name: start
          required: false
          schema:
            type: integer
          description: Start position (default 1).
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: Max results (default 50).
      responses:
        '200':
          description: Vendors list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
        '401':
          description: Missing or invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /lookups/accounts:
    get:
      summary: List accounts (optionally filtered by name)
      operationId: listAccounts
      parameters:
        - in: query
          name: realmId
          required: false
          schema:
            type: string
          description: Optional; defaults to the connected company.
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: Optional filter; matches anywhere in Name.
        - in: query
          name: start
          required: false
          schema:
            type: integer
          description: Start position (default 1).
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: Max results (default 50).
        - in: query
          name: paymentType
          required: false
          schema:
            type: string
            enum: [Cash, CreditCard]
          description: If set, filters to funding accounts valid for a Purchase with this paymentType.
        - in: query
          name: accountType
          required: false
          schema:
            type: string
          description: Filter by exact AccountType (e.g., Bank, Credit Card).
        - in: query
          name: last4
          required: false
          schema:
            type: string
            pattern: '^\\d{4}$'
          description: Filter accounts whose Name ends with these 4 digits (useful for credit card last 4).
      responses:
        '200':
          description: Accounts list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
        '401':
          description: Missing or invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /lookups/customers:
    get:
      summary: List customers (optionally filtered by name)
      operationId: listCustomers
      parameters:
        - in: query
          name: realmId
          required: false
          schema:
            type: string
          description: Optional; defaults to the connected company.
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: Optional filter; matches anywhere in DisplayName.
        - in: query
          name: start
          required: false
          schema:
            type: integer
          description: Start position (default 1).
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: Max results (default 50).

  /lookups/purchases:
    get:
      summary: List purchases (optional filters)
      operationId: listPurchases
      parameters:
        - in: query
          name: realmId
          required: false
          schema:
            type: string
          description: Optional; defaults to the connected company.
        - in: query
          name: vendorId
          required: false
          schema:
            type: string
          description: Filter by Vendor Id.
        - in: query
          name: from
          required: false
          schema:
            type: string
            pattern: '^\\d{4}-\\d{2}-\\d{2}$'
          description: Start date (YYYY-MM-DD).
        - in: query
          name: to
          required: false
          schema:
            type: string
            pattern: '^\\d{4}-\\d{2}-\\d{2}$'
          description: End date (YYYY-MM-DD).
        - in: query
          name: amountMin
          required: false
          schema:
            type: number
        - in: query
          name: amountMax
          required: false
          schema:
            type: number
        - in: query
          name: start
          required: false
          schema:
            type: integer
          description: Start position (default 1).
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: Max results (default 50).
      responses:
        '200':
          description: Purchases list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
        '401':
          description: Missing or invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      responses:
        '200':
          description: Customers list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
        '401':
          description: Missing or invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /oauth/status:
    get:
      summary: Connection status (debug)
      description: Returns whether a QuickBooks company is connected and the current realm information.
      operationId: oauthStatus
      security: []
      responses:
        '200':
          description: Current connection status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStatus'

  /qbo/vendor:
    post:
      summary: Upsert a vendor by DisplayName
      operationId: upsertVendor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                realmId:
                  type: string
                  description: Optional; defaults to the connected company.
                displayName:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                billAddr:
                  type: object
                  properties:
                    Line1:
                      type: string
                    City:
                      type: string
                    CountrySubDivisionCode:
                      type: string
                    PostalCode:
                      type: string
              required:
                - displayName
            examples:
              minimal:
                summary: Minimal vendor
                value:
                  displayName: Acme Supplies
              withContact:
                summary: With contact and billing address
                value:
                  displayName: Green Valley Feed Supply
                  email: orders@greenvalleyfeed.com
                  phone: "555-321-9876"
                  billAddr:
                    Line1: 123 Country Rd
                    City: Fairview
                    CountrySubDivisionCode: KY
                    PostalCode: 40001
      responses:
        '200':
          description: Vendor upsert response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Vendor:
                    type: object
                    properties:
                      Id:
                        type: string
                      DisplayName:
                        type: string
              examples:
                created:
                  summary: Vendor created
                  value:
                    Vendor:
                      Id: "35"
                      DisplayName: Green Valley Feed Supply
        '400':
          description: Validation or request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidDisplayName:
                  summary: Illegal characters in DisplayName
                  value:
                    error: HTTP 400 Bad Request
                    qboFault:
                      type: ValidationFault
                      errors:
                        - code: "2040"
                          message: Invalid String. The String may contain unsupported or illegal chars
                          detail: "Element contains invalid characters. Bad: Name 12:34"
                          element: DisplayName
                    suggestions:
                      displayNameSanitized: "Bad- Name 12-34"
                      reason: DisplayName contained illegal characters; try sanitized variant.
        '401':
          description: Missing or invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /qbo/account:
    post:
      summary: Upsert an account by Name (defaults to Expense/Supplies)
      operationId: upsertAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                realmId:
                  type: string
                  description: Optional; defaults to the connected company.
                name:
                  type: string
                type:
                  type: string
                  description: Default Expense
                detailType:
                  type: string
                  description: Default Supplies
                parentRef:
                  type: object
                  properties:
                    value:
                      type: string
              required:
                - name
      responses:
        '200':
          description: Account upsert response
          content:
            application/json:
              schema:
                type: object
                properties:
                  Account:
                    type: object
                    properties:
                      Id:
                        type: string
                      Name:
                        type: string
                      AccountType:
                        type: string

  /workflow/expense-intake:
    post:
      summary: Expense intake with match-or-create and optional receipt attach
      operationId: expenseIntake
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                realmId:
                  type: string
                  description: Optional; defaults to the connected company.
                amount:
                  type: number
                txnDate:
                  type: string
                  pattern: '^\\d{4}-\\d{2}-\\d{2}$'
                currency:
                  type: string
                vendorRef:
                  type: object
                  properties:
                    value:
                      type: string
                vendorName:
                  type: string
                memo:
                  type: string
                categoryName:
                  type: string
                expenseAccountRef:
                  type: object
                  properties:
                    value:
                      type: string
                funding:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [Cash, CreditCard]
                    accountRef:
                      type: object
                      properties:
                        value:
                          type: string
                    accountName:
                      type: string
                  required:
                    - type
                receipt:
                  type: object
                  properties:
                    fileUrl:
                      type: string
                      format: uri
                    fileName:
                      type: string
                    mime:
                      type: string
              required:
                - amount
                - txnDate
                - funding
            examples:
              minimal:
                summary: Create if not found, no receipt
                value:
                  amount: 12.34
                  txnDate: 2025-09-16
                  vendorName: Bluegrass Tractor Supply
                  funding:
                    type: Cash
                    accountName: Cash
                  categoryName: Supplies
              withReceiptUrl:
                summary: Match by amount/date/vendor and attach receipt
                value:
                  amount: 2.50
                  txnDate: 2025-09-16
                  vendorName: ZZZ Purchase Vendor 14-14-26
                  funding:
                    type: Cash
                    accountRef:
                      value: "17"
                  expenseAccountRef:
                    value: "11"
                  receipt:
                    fileUrl: "https://example.com/receipt.pdf"
                    fileName: receipt.pdf
                    mime: application/pdf
      responses:
        '200':
          description: Matched or created purchase with attachment result
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [matched, created]
                  Purchase:
                    type: object
                    properties:
                      Id:
                        type: string
                      TotalAmt:
                        type: number
                      TxnDate:
                        type: string
                  attachment:
                    $ref: '#/components/schemas/QboResponse'
        '400':
          description: Validation error (includes suggestions on fix)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

# Note for ChatGPT OAuth setup (not part of the spec):
# Authorization URL: https://appcenter.intuit.com/connect/oauth2
# Token URL: https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer
# Scopes: com.intuit.quickbooks.accounting
