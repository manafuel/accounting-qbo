# OpenAPI 3.1 spec for qbo-bridge
openapi: 3.1.0
info:
  title: qbo-bridge
  version: 0.2.2
  description: Minimal bridge to QuickBooks Online for GPT Actions
servers:
  - url: https://accounting-qbo.onrender.com
components:
  securitySchemes:
    actionApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
  schemas:
    QboResponse:
      type: object
      additionalProperties: true
security:
  - actionApiKey: []
paths:
  /qbo/query:
    get:
      summary: Run a QuickBooks query
      operationId: qboQuery
      parameters:
        - in: query
          name: realmId
          required: true
          schema: { type: string }
        - in: query
          name: q
          required: true
          schema: { type: string }
      responses:
        '200':
          description: QBO query response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
  /qbo/purchase:
    post:
      summary: Create a Purchase transaction
      operationId: createPurchase
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                realmId: { type: string }
                paymentType: { type: string, enum: [Cash, CreditCard] }
                accountRef:
                  type: object
                  properties: { value: { type: string } }
                  required: [value]
                vendorRef:
                  type: object
                  properties: { value: { type: string } }
                  required: [value]
                txnDate: { type: string, pattern: '^\\d{4}-\\d{2}-\\d{2}$' }
                privateNote: { type: string }
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      amount: { type: number }
                      description: { type: string }
                      expenseAccountRef:
                        type: object
                        properties: { value: { type: string } }
                        required: [value]
                      customerRef:
                        type: object
                        properties: { value: { type: string } }
                      classRef:
                        type: object
                        properties: { value: { type: string } }
                      taxCodeRef:
                        type: object
                        properties: { value: { type: string } }
                      billableStatus: { type: string, enum: [NotBillable, Billable] }
                  minItems: 1
              required: [realmId, paymentType, accountRef, vendorRef, txnDate, lines]
      responses:
        '200':
          description: QBO create purchase response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
  /qbo/attachment:
    post:
      summary: Upload an attachment and link to a Purchase
      operationId: uploadAttachment
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                realmId: { type: string }
                txnId: { type: string }
                note: { type: string }
                file:
                  type: string
                  format: binary
              required: [realmId, txnId, file]
      responses:
        '200':
          description: QBO upload response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QboResponse'
  /lookups/vendors:
    get:
      summary: List vendors (optionally filtered by name)
      operationId: listVendors
      parameters:
        - in: query
          name: realmId
          required: true
          schema: { type: string }
        - in: query
          name: name
          required: false
          schema: { type: string }
      responses:
        '200': { description: Vendors list, content: { application/json: { schema: { $ref: '#/components/schemas/QboResponse' } } } }
  /lookups/accounts:
    get:
      summary: List accounts (optionally filtered by name)
      operationId: listAccounts
      parameters:
        - in: query
          name: realmId
          required: true
          schema: { type: string }
        - in: query
          name: name
          required: false
          schema: { type: string }
      responses:
        '200': { description: Accounts list, content: { application/json: { schema: { $ref: '#/components/schemas/QboResponse' } } } }
  /lookups/customers:
    get:
      summary: List customers (optionally filtered by name)
      operationId: listCustomers
      parameters:
        - in: query
          name: realmId
          required: true
          schema: { type: string }
        - in: query
          name: name
          required: false
          schema: { type: string }
      responses:
        '200': { description: Customers list, content: { application/json: { schema: { $ref: '#/components/schemas/QboResponse' } } } }

# Note for ChatGPT OAuth setup (not part of the spec):
# Authorization URL: https://appcenter.intuit.com/connect/oauth2
# Token URL: https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer
# Scopes: com.intuit.quickbooks.accounting
